CREATE TABLE SENSO
(
ANO INT NOT NULL,
COD_UF CHAR(2) NOT NULL,
ESTADO VARCHAR2(50) NOT NULL,
COD_MUN CHAR(7) NOT NULL,
NOME_MUN VARCHAR(50) NOT NULL,
REGIAO VARCHAR(150),
COD_MESO_REG CHAR(4),
NOME_MESO_REG VARCHAR(100) NOT NULL,
COD_MIC_REG CHAR(5) NOT NULL,
NOME_MIN_REG VARCHAR(50) NOT NULL,
PIB DECIMAL(12,3) NOT NULL,
POPULACAO INTEGER NOT NULL,
PIB_PEC_CAP DECIMAL(12,3) NOT NULL
);
CREATE TABLE UF
(
COD_UF CHAR(2) NOT NULL PRIMARY KEY,
SIGLA_UF CHAR(2) NOT NULL,
ESTADO VARCHAR(50) NOT NULL
);

-- DDL  CRIACAO DA TABELA PARA EXERCICIOS


CREATE TABLE FUNCIONARIOS
(
 ID INT NOT NULL,
 NOME VARCHAR2(50) NOT NULL,
 SALARIO DECIMAL(10,2),
 SETOR VARCHAR2(30), 
 PRIMARY KEY (id)
);

CREATE SEQUENCE ID_FUNC
 START WITH     1
 INCREMENT BY   1
 NOCACHE;
 
 -- DDL  CRIACAO DA TABELA PARA EXERCICIOS


-- DDL CRIANDO TABELA

CREATE TABLE funcionario   
(		 matricula INT not null primary key,      
	     nome      VARCHAR2(50) NOT NULL,      
		 sobrenome VARCHAR2(50) NOT NULL,      
		 endereco  VARCHAR2(50),      
		 cidade    VARCHAR2(50),      
		 pais      VARCHAR2(25),      
		 data_nasc DATE   --TIMESTAMP POSSIVEL TAMBEM 
);
 
 -- CREATE SEQUENCIA FUNCIONARIO
 CREATE SEQUENCE ID_FUNC2
 START WITH 1
 INCREMENT BY 1
 NOCACHE;
 -- DDL CRIANDO TABELA COM CHAVE ESTRANGEIRA
 CREATE TABLE SALARIO
 (
 MATRICULA INT NOT NULL, 
 SALARIO DECIMAL(10,2) NOT NULL,
 FOREIGN KEY (MATRICULA) REFERENCES FUNCIONARIO(MATRICULA) 
 );
 
 -- DDL CRIACAO DE TABELA COM CHAVE PRIMARIA
CREATE TABLE audit_salario   
	(  
		transacao int not null,    
		matricula  INT NOT NULL,      
		data_trans TIMESTAMP NOT NULL,      
		sal_antigo DECIMAL(10,2),      
		sal_novo   DECIMAL(10,2), 
		Usuario    VARCHAR2(20)not null,
		primary key(transacao),
		FOREIGN KEY(matricula) REFERENCES funcionario(matricula) 
		);
 
 -- DDL SEQUENCIA TRANSACACAO
CREATE SEQUENCE ID_TRAN
 START WITH     1
 INCREMENT BY   1
 NOCACHE;
 
 -- DDL CRIACAO DE INDEX
 CREATE INDEX IX_FUNC1 ON FUNCIONARIO(DATA_NASC);

 -- DDL CRIACAO DE INDEX
 CREATE INDEX IX_FUNC1 ON FUNCIONARIO(CIDADE_PAIS);
 

  -- Adicionando novo campo na tabela 
ALTER TABLE funcionario ADD genero CHAR(1);
 
ALTER TABLE FUNCIONARIO RENAME COLUMN GENERO TO SEXO;

 -- Modifcando tipo de campo
 ALTER TABLE FUNCIONARIO MODIFY SEXO VARCHAR2(1);
 
 ALTER TABLE FUNCIONARIO RENAME TO PESSOA;
 
  --  retornando situaacao anterior
ALTER TABLE pessoa
RENAME TO  funcionario;
 
 -- DDL PARA ADICIONAR COLUNA NA TAB SENSO 
  ALTER TABLE SENSO ADD ID INT;
 
 -- DDL PARA REMOVER CAMPO ID DA TABELA SENSO 
ALTER TABLE SENSO 
DROP COLUMN ID;
-- SELECT * FROM SENSO;

-- Alterando tipo da coluna
ALTER TABLE funcionario MODIFY  endereco VARCHAR2(30);

 
 -- Excluindo campo da coluna
ALTER TABLE funcionario DROP COLUMN sexo; 

-- CRAICAO DE VIEW
CREATE VIEW v_funcionario
	AS
	SELECT * FROM FUNCIONARIOS;
    
-- MODIFICANDO VIEW DE VIEW
-- ALTER VIEW
CREATE OR REPLACE VIEW V_FUNCIONARIO AS SELECT ID, NOME FROM FUNCIONARIOS;


-- 
-- Excluindo VIEW
DROP VIEW v_funcionario; 


-- Excluindo index
DROP index ix_func1;


-- CRIANDO INDEX
CREATE INDEX IX_FUNC1 ON FUNCIONARIOS (NOME);

-- CRIANDO PROCEDURE
CREATE OR REPLACE PROCEDURE PROC_QUADRADO (V_MUML NUMBER)
IS 
V_MULM2 NUMBER;
BEGIN
V_MULM2 := V_MUML * V_MUML;
dbms_output.put_line('RETORNO: '||v_mulm2);
END;

SET SERVEROUTPUT ON;
EXECUTE PROC_QUADRADO(2);


-- EXCLUINDO PROCEDURE 
DROP PROCEDURE proc_quadrado; 


-- Excluindo Função exemplo
DROP function func_salario;


-- Excluindo Trigger
DROP trigger trig_func_salario;

-- DDL TRUNCATE
TRUNCATE TABLE SENSO;

-- DDL TRUNCATE VERIFICANDO REGISTROS

SELECT * FROM FUNCIONARIOS;

-- CRIANDO TABELA TEMPORARIABK TABELA TEMPORARIA
CREATE GLOBAL TEMPORARY TABLE TMP_FUNCIONARIOS
(
 ID INT,
 NOME VARCHAR2(50),
 SALARIO DECIMAL(10,2),
 SETOR VARCHAR2(30)
);

-- FAZENDO BK NA TABELAS TEMPORARIA
INSERT INTO TMP_FUNCIONARIOS
SELECT * FROM FUNCIONARIOS;
-- VERIFACANDO BK NA TABELA TEMPORARIA
SELECT * FROM TMP_FUNCIONARIOS;

 
